version: "3.8"

services:
          
  orion:
    image: fiware/orion:${ORION_VERSION:-3.7.0} #Sometimes the latest builds fail. Hence, we recommend to use fixed, stable versions
    hostname: orion
    restart: always
    container_name: "orion"
    depends_on:
        - mongo-db
    networks:
        - fiware
    ports:
       - "1026:1026"
    command: -dbhost mongo-db -logLevel DEBUG -noCache -logForHumans

  mongo-db:
    image: mongo:${MONGODB_VERSION:-5.0.24}
    hostname: mongo-db
    container_name: "mongo-db"
    restart: always
    networks:
        - fiware
    volumes:
      - mongo-db:${MONGO_DATA_DIR:-/data/db}

  mongo-express:
    image: mongo-express:${ME_VERSION:-1.0.2-20}
    hostname: mongo-express
    container_name: "mongo-express"
    ports:
        - "8081:8081"
    networks:
        - fiware
    environment:
        - ME_CONFIG_OPTIONS_EDITORTHEME=${ME_CONFIG_OPTIONS_EDITORTHEME:-ambiance}
        - ME_CONFIG_MONGODB_SERVER=${ME_CONFIG_MONGODB_SERVER_SN:-mongo-db}
        - ME_CONFIG_MONGODB_PORT=${ME_CONFIG_MONGODB_PORT:-27017}
        - ME_CONFIG_MONGODB_ENABLE_ADMIN=${ME_CONFIG_MONGODB_ENABLE_ADMIN:-true}
        #- ME_CONFIG_MONGODB_AUTH_DATABASE=admin
        - ME_CONFIG_BASICAUTH=${ME_CONFIG_MONGODB_BASICAUTH:-false}

  iot-agent:
    image: fiware/iotagent-json:${IOTA_JSON_VERSION:-1.19.0}
    hostname: iot-agent
    container_name: "iot-agent"
    restart: always
    depends_on:
      - mongo-db
    ports:
      - "4041:4041"
    networks:
      - fiware
    environment:
      - IOTA_CB_HOST=orion
      - IOTA_CB_PORT=1026
      - IOTA_NORTH_PORT=4041
      - IOTA_REGISTRY_TYPE=mongodb
      - IOTA_LOG_LEVEL=DEBUG
      - IOTA_TIMESTAMP=true
      - IOTA_CB_NGSI_VERSION=v2
      - IOTA_AUTOCAST=false
      - IOTA_EXPLICIT_ATTRS=true
      - IOTA_MONGO_HOST=mongo-db
      - IOTA_MONGO_PORT=27017
      - IOTA_MONGO_DB=iotagentjson
      - IOTA_PROVIDER_URL=http://iot-agent:4041
      - IOTA_DEFAULT_RESOURCE=/iot/json
      - IOTA_HTTP_PORT=7896
      - IOTA_MQTT_HOST=mosquitto
      - IOTA_MQTT_PORT=1883
      - IOTA_MQTT_PROTOCOL=mqtt
      - IOTA_MQTT_KEEPALIVE=60
      - IOTA_AMQP_DISABLED=true
    
  mosquitto:
    image: eclipse-mosquitto:${MOSQUITTO_VERSION:-2.0.15}
    restart: always
    hostname: mosquitto
    container_name: mosquitto
    ports: 
        - "1883:1883"
    networks:
        - fiware
    volumes:
        - ../general/mosquitto.conf:/mosquitto/config/mosquitto.conf

  quantumleap:
    image: orchestracities/quantumleap:${QL_VERSION:-0.8.3}
    hostname: quantumleap
    container_name: quantumleap
    depends_on:
      - orion
      - crate
    networks:
      - fiware
    ports:
      - "8668:8668"
    environment:
      - CRATE_HOST=crate
      
  crate:
    image: crate/crate:${CRATEDB_VERSION:-4.6.6}
    restart: always
    hostname: crate
    container_name: crate
    networks:
        - fiware
    ports:
      - "4200:4200"
    volumes:
      - crate:/data
    environment: 
      - TZ=Europe/Berlin
      - CRATE_HEAP_SIZE=1g

  grafana:
    image: grafana/grafana:${GRAFANA_VERSION:-9.3.0}
    restart: always
    container_name: grafana
    depends_on:
      - crate
    environment:
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-worldmap-panel
      - TZ=Europe/Berlin
    volumes:
      - "grafana:/var/lib/grafana"
    ports:
      - "3000:3000"
    networks:
      - fiware

  portainer:
    image: portainer/portainer-ce:${PORTAINER_VERSION:-2.16.2}
    container_name: portainer
    ports:
      - "9000:9000"
      - "9443:9443"
      - "8000:8000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    networks:
      - ${PORTAINER_NETWORK:-portainer}
    restart: always



volumes:
  mongo-db:
    name: mongodb
  crate:
    name: crate
  grafana:
    name: grafana
  portainer_data:
   name: portainer_data

networks:
  fiware:
    name: fiware
  portainer:
    name: portainer
