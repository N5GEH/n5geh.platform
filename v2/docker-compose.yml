version: "3.8"

services:
          
  orion:
    image: fiware/orion:${ORION_VERSION:-3.7.0} #Sometimes the latest builds fail. Hence, we recommend to use fixed, stable versions
    hostname: orion
    container_name: "orion"
    restart: always
    ports:
       - "${ORION_PORT:-1026}:1026"
    networks:
       - fiware
    depends_on:
       - mongo-db
    environment:
      - ORION_LOG_LEVEL=${ORION_LOG_LEVEL:-DEBUG}
      - ORION_LOG_FOR_HUMANS=${ORION_LOG_FOR_HUMANS:-TRUE}
      - ORION_STAT_COUNTERS=${ORION_STAT_COUNTERS:-FALSE}
      - ORION_STAT_SEM_WAIT=${ORION_STAT_SEM_WAIT:-FALSE}
      - ORION_STAT_TIMING=${ORION_STAT_TIMING:-FALSE}
      - ORION_STAT_NOTIF_QUEUE=${ORION_STAT_NOTIF_QUEUE:-TRUE}
      - ORION_MONGO_HOST=${ORION_MONGO_HOST_SN:-mongo-db}
      # - ORION_MONGO_REPLICA_SET=${ORION_MONGO_REPLICA_SET:-rs0}
      - ORION_MONGO_WRITE_CONCERN=${ORION_WRITE_CONCERN:-1}
      - ORION_NOTIF_MODE=${ORION_NOTIFICATION_MODE:-transient} 
      # - ORION_TRQ_POOL_SIZE={ORION_THREADPOOL_SIZE=-2} # use only if ORION_NOTIFICATION_MODE is set to "threadpool"
      - ORION_MUTEX_POLICY=${ORION_REQUEST_POLICY:-all}
      - ORION_CONN_MEMORY=${ORION_CONNECTION_MEMORY:-128}

  mongo-db:
    image: mongo:${MONGODB_VERSION:-5.0.24}
    hostname: mongo-db
    container_name: "mongo-db"
    restart: always
    networks:
        - fiware
    volumes:
      - ${MONGODB_VOLUME_PATH:-mongo-db}:${MONGO_DATA_DIR:-/data/db}

  mongo-express:
    image: mongo-express:${ME_VERSION:-1.0.2}
    hostname: mongo-express
    container_name: "mongo-express"
    restart: always
    ports:
        - "${ME_PORT:-8081}:8081"
    networks:
        - fiware
    environment:
        - ME_CONFIG_OPTIONS_EDITORTHEME=${ME_CONFIG_OPTIONS_EDITORTHEME:-ambiance}
        - ME_CONFIG_MONGODB_URL=${ME_CONFIG_MONGODB_URL_SN:-mongodb://mongo-db:27017}
        - ME_CONFIG_MONGODB_ENABLE_ADMIN=${ME_CONFIG_MONGODB_ENABLE_ADMIN:-true}
        #- ME_CONFIG_MONGODB_AUTH_DATABASE=admin
        - ME_CONFIG_BASICAUTH=${ME_CONFIG_MONGODB_BASICAUTH:-false}

  iot-agent-json:
    image: fiware/iotagent-json:${IOTA_JSON_VERSION:-1.19.0}
    hostname: iot-agent
    container_name: "iot-agent"
    restart: always
    ports:
      - "${IOTA_JSON_PORT:-4041}:${IOTA_JSON_NORTH_PORT:-4041}"
    networks:
      - fiware
    depends_on:
      - mongo-db
    environment:
      - IOTA_MULTI_CORE=${IOTA_JSON_MULTI_CORE:-true}
      - IOTA_CB_HOST=${IOTA_JSON_CB_HOST:-orion}
      - IOTA_CB_PORT=${IOTA_JSON_CB_PORT:-1026}
      - IOTA_NORTH_PORT=${IOTA_JSON_NORTH_PORT:-4041}
      - IOTA_REGISTRY_TYPE=${IOTA_JSON_REGISTRY_TYPE:-mongodb}
      - IOTA_LOG_LEVEL=${IOTA_JSON_LOG_LEVEL:-DEBUG}
      - IOTA_TIMESTAMP=${IOTA_JSON_TIMESTAMP:-true}
      - IOTA_CB_NGSI_VERSION=${IOTA_JSON_CB_NGSI_VERSION:-v2}
      - IOTA_AUTOCAST=${IOTA_JSON_AUTOCAST:-false}
      - IOTA_EXPLICIT_ATTRS=${IOTA_JSON_EXPLICIT_ATTRS:-true}
      - IOTA_MONGO_HOST=${IOTA_JSON_MONGODB_HOST_SN:-mongo-db}
      - IOTA_MONGO_PORT=${IOTA_JSON_MONGODB_PORT:-27017}
      - IOTA_MONGO_DB=${IOTA_JSON_MONGODB_DB_NAME:-iotagentjson}
      - IOTA_PROVIDER_URL=${IOTA_JSON_PROVIDER_URL:-http://iot-agent:4041}
      - IOTA_DEFAULT_RESOURCE=${IOTA_JSON_DEFAULT_RESOURCE:-/iot/json}
      - IOTA_HTTP_PORT=${IOTA_JSON_HTTP_PORT:-7896}
      - IOTA_MQTT_HOST=${IOTA_JSON_MQTT_HOST:-mqtt-broker}
      - IOTA_MQTT_PORT=${IOTA_JSON_MQTT_PORT:-1883}
      # - IOTA_MQTT_USERNAME=${IOTA_JSON_MQTT_USERNAME:-iotagent}
      # - IOTA_MQTT_PASSWORD=${IOTA_JSON_MQTT_PASSWORD:-mypassword}
      - IOTA_MQTT_PROTOCOL=${IOTA_JSON_MQTT_PROTOCOL:-mqtt}
      - IOTA_MQTT_KEEPALIVE=${IOTA_JSON_MQTT_KEEPALIVE:-60}
      - IOTA_AMQP_DISABLED=${IOTA_JSON_AMQP_DISABLED:-true}
    
  mqtt-broker:
    image: eclipse-mosquitto:${MOSQUITTO_VERSION:-2.0.11}
    hostname: mqtt-broker
    container_name: mqtt-broker
    restart: always
    ports: 
        - "${MOSQUITTO_PORT:-1883}:1883"
    networks:
        - fiware
    volumes:
        - ../general/mosquitto.conf:/mosquitto/config/mosquitto.conf

  quantumleap:
    image: orchestracities/quantumleap:${QL_VERSION:-1.0.0}
    hostname: quantumleap
    container_name: quantumleap
    restart: always
    ports:
      - "${QL_PORT:-8668}:8668"
    networks:
      - fiware
    depends_on:
      - orion
      - crate
    environment:
      - LOGLEVEL=${QL_LOG_LEVEL:-DEBUG}
      - CRATE_HOST=${QL_CRATEDB_HOST_SN:-crate}
      # - CRATE_DB_USER=${QL_CRATEDB_USER:-ql}
      # - CRATE_DB_PASS=${QL_CRATEDB_PASSWORD:-myqlpassword}
      # - REDIS_HOST=${QL_REDIS_HOST:-redis-cache}
      # - REDIS_PORT=${QL_REDIS_PORT:-6379}
      # - CACHE_QUERIES=${QL_CACHE_QUERIES:-True}
      
  crate:
    image: crate:${CRATEDB_VERSION:-4.8.4} # Please check release notes!
    hostname: crate
    container_name: crate
    restart: always
    ports:
      - "${CRATEDB_Port:-4200}:4200"
    networks:
        - fiware
    volumes:
      - ${CRATEDB_VOLUME_PATH:-crate}:${CRATEDB_DATA_DIR:-/data}
    environment: 
      - TZ=${TIMEZONE:-Europe/Berlin}
      - CRATE_HEAP_SIZE=${CRATEDB_HEAP_SIZE:-1g}

  grafana:
    image: grafana/grafana:${GRAFANA_VERSION:-9.3.0}
    hostname: grafana
    container_name: grafana
    restart: always
    ports:
      - "${GRAFANA_PORT:-3000}:3000"
    networks:
      - fiware
    environment:
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-worldmap-panel,grafana-simple-json-datasource
      - TZ=${TIMEZONE:-Europe/Berlin}
    volumes:
      - "grafana:/var/lib/grafana"

  portainer:
    image: portainer/portainer-ce:${PORTAINER_VERSION:-2.19.4}
    hostname: portainer
    container_name: portainer
    restart: always
    ports:
      - "${PORTAINER_PORT:-9000}:9000"
      # - "9443:9443"
      # - "8000:8000"
    networks:
      - portainer
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data



volumes:
  mongo-db:
    name: mongodb
  crate:
    name: crate
  grafana:
    name: grafana
  portainer_data:
   name: portainer_data

networks:
  fiware:
    name: fiware
  portainer:
    name: portainer
